(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8734],{92346:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/help/mock_apis",function(){return t(26958)}])},26958:function(e,a,t){"use strict";t.r(a),t.d(a,{default:function(){return l}});var n=t(85893),s=t(5285);t(67294);var c=t(3905),r=t(93664);let o={};function m(e){let{components:a,...t}=e;return(0,c.kt)("wrapper",Object.assign({},o,t,{components:a,mdxType:"MDXLayout"}),(0,c.kt)("h1",null,"Creating Mock APIs with Mockaroo"),(0,c.kt)("p",null,"Mockaroo allows you to create your own mock APIs, which generate responses using data from your schemas.\nThis is useful for testing your API client code, or for creating a mock API for your front-end developers to use while you're still building your API."),(0,c.kt)("p",null,"To create a mock API:"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},'Click "Mock APIs" in the header, then click "Create a Mock API".'),(0,c.kt)("li",{parentName:"ul"},"Select the HTTP method and path for your API."),(0,c.kt)("li",{parentName:"ul"},"Fill in the handler script")),(0,c.kt)("p",null,"Here's an example handler script:"),(0,c.kt)("div",Object.assign({},{className:"remark-highlight"}),(0,c.kt)("pre",Object.assign({parentName:"div"},{className:"language-ruby"}),(0,c.kt)("code",Object.assign({parentName:"pre"},{className:"language-ruby"}),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"# Example"),"\n",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"# Route:    GET /users.json"),"\n",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"# Request:  GET /users.json?min_age=10&max_age=80"),"\n\n",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),'# Use the schema named "Users".'),"\nschema ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token string-literal"}),(0,c.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),'"Users"')),"\n\n",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),'# Set min and max on the "age" field to url params.'),"\nset ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token string-literal"}),(0,c.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),'"age"')),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token symbol"}),"min"),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," params",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token string-literal"}),(0,c.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'min_age'")),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]"),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token symbol"}),"max"),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," params",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token string-literal"}),(0,c.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),"'max_age'")),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]"),"\n\n",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"# Optionally set the status code to something other than the default (200)"),"\n",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"# status 400"),"\n\n",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"# Generate ten rows."),"\ngenerate ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token number"}),"10"),"\n\n",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"# Or generate and cache the result so that the same data is returned each time"),"\n",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"# for the same URL"),"\n",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"# generate 1, cache_for: 1.year"),"\n"))),(0,c.kt)("h2",null,"Returning the same data for each URL"),(0,c.kt)("p",null,"By default Mock APIs return randomly generated data for each URL based on the schema you specify. If you want to return the same data for each URL, use the ",(0,c.kt)("inlineCode",{parentName:"p"},"cache_for")," option on the ",(0,c.kt)("inlineCode",{parentName:"p"},"generate")," method.\nThis will cache the response for the specified number of seconds. Set a long cache time to ensure that the same data is returned forever."),(0,c.kt)("p",null,"For example:"),(0,c.kt)("div",Object.assign({},{className:"remark-highlight"}),(0,c.kt)("pre",Object.assign({parentName:"div"},{className:"language-ruby"}),(0,c.kt)("code",Object.assign({parentName:"pre"},{className:"language-ruby"}),"schema ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token string-literal"}),(0,c.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),'"Users"')),"\ngenerate ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token number"}),"1"),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token symbol"}),"cache_for"),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token number"}),"100."),"years\n"))),(0,c.kt)("p",null,'You can clear the cache by navigating to your Mock API in Mockaroo and clicking "Clear Cached Results".'),(0,c.kt)("h2",null,"Handler Script Methods"),(0,c.kt)("p",null,"Here are the methods you can use in your handler script:"),(0,c.kt)("h3",null,"schema"),(0,c.kt)("p",null,"Sets the schema used to generate the response."),(0,c.kt)("div",Object.assign({},{className:"remark-highlight"}),(0,c.kt)("pre",Object.assign({parentName:"div"},{className:"language-ruby"}),(0,c.kt)("code",Object.assign({parentName:"pre"},{className:"language-ruby"}),"schema ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token string-literal"}),(0,c.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),'"Users"')),"\n"))),(0,c.kt)("h4",null,"parameters"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"name - The name of the schema to use. Required.")),(0,c.kt)("h3",null,"set"),(0,c.kt)("p",null,"Sets a parameters for one of the fields in your schema before generating the response."),(0,c.kt)("div",Object.assign({},{className:"remark-highlight"}),(0,c.kt)("pre",Object.assign({parentName:"div"},{className:"language-ruby"}),(0,c.kt)("code",Object.assign({parentName:"pre"},{className:"language-ruby"}),"set ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token string-literal"}),(0,c.kt)("span",Object.assign({parentName:"span"},{className:"token string"}),'"age"')),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token symbol"}),"min"),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token number"}),"10"),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token symbol"}),"max"),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token number"}),"80"),"\n"))),(0,c.kt)("h4",null,"parameters"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"field - The name of the field in your schema to set. Required."),(0,c.kt)("li",{parentName:"ul"},"parameters - A hash of parameters to set on the field. Required.")),(0,c.kt)("br",null),(0,c.kt)("p",null,"Here are the parameters you can set for each field type:"),(0,c.kt)(r.Z,{hideTypes:!0,mdxType:"TypeList"}),(0,c.kt)("h3",null,"generate"),(0,c.kt)("p",null,"Generates the response using the schema specified by calling the ",(0,c.kt)("inlineCode",{parentName:"p"},"schema")," method."),(0,c.kt)("p",null,"For example, to generate 10 records:"),(0,c.kt)("div",Object.assign({},{className:"remark-highlight"}),(0,c.kt)("pre",Object.assign({parentName:"div"},{className:"language-ruby"}),(0,c.kt)("code",Object.assign({parentName:"pre"},{className:"language-ruby"}),"generate ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token number"}),"10"),"\n"))),(0,c.kt)("p",null,"To cache the response for 1 year:"),(0,c.kt)("div",Object.assign({},{className:"remark-highlight"}),(0,c.kt)("pre",Object.assign({parentName:"div"},{className:"language-ruby"}),(0,c.kt)("code",Object.assign({parentName:"pre"},{className:"language-ruby"}),"generate ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token number"}),"10"),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token symbol"}),"cache_for"),(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,c.kt)("span",Object.assign({parentName:"code"},{className:"token number"}),"1."),"year\n"))),(0,c.kt)("h4",null,"parameters"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"count - The number of rows to generate. Required."),(0,c.kt)("li",{parentName:"ul"},"options - A hash of options. Optional.",(0,c.kt)("ul",{parentName:"li"},(0,c.kt)("li",{parentName:"ul"},"cache_for - The number of seconds to cache the response for. Optional. You can use ruby's ",(0,c.kt)("inlineCode",{parentName:"li"},"ActiveSupport::Duration")," syntax, e.g. ",(0,c.kt)("inlineCode",{parentName:"li"},"cache_for: 1.year"),".")))))}function l(){return(0,n.jsx)(s.Z,{children:(0,n.jsx)(m,{})})}m.isMDXComponent=!0}},function(e){e.O(0,[5040,5706,7533,9774,2888,179],function(){return e(e.s=92346)}),_N_E=e.O()}]);